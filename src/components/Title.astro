---
import AtomSymbol from "./AtomSymbol.astro";
import Logo from "./Logo.astro";

interface Props {
  logo?: string | "default" | "atomic";
  logo_alt_text?: string;
  logoClasses?: string;
  title_text: string;
  eyelash_text?: string;
  description_text?: string;
  visual?: string;
  visualClasses?: string;
}

const {
  logo = "default",
  logo_alt_text,
  logoClasses = "",
  title_text,
  eyelash_text,
  description_text,
  visual,
  visualClasses = "",
} = Astro.props;
---

<div class="title-container">
  {
    (() => {
      switch (logo) {
        case "default":
          return (
            <Logo classes={`${logoClasses} animate-fade-in delay-[300ms]`} />
          );
        case "atomic":
          return (
            <AtomSymbol
              classes={`${logoClasses} animate-fade-in delay-[300ms]`}
            />
          );
        default:
          return (
            <img
              src={logo}
              alt={logo_alt_text}
              class={`${logoClasses} animate-fade-in delay-[300ms]`}
              draggable="false"
            />
          );
      }
    })()
  }
  <div class="flex flex-1 flex-col gap-10 my-10">
    {
      eyelash_text && (
        <h3 class="animate-fade-in-up delay-[500ms]">{eyelash_text}</h3>
      )
    }
    <h1 class="animate-fade-in-up delay-[600ms]">{title_text}</h1>
    {
      description_text && (
        <p class="animate-fade-in-up delay-[700ms]">{description_text}</p>
      )
    }
    <slot />
  </div>
  {
    visual && (
      <img
        src={visual}
        alt={title_text}
        class={`${visualClasses} m-auto animate-fade-in delay-[800ms]`}
        draggable="false"
      />
    )
  }
</div>

<style>
  .title-container {
    @apply flex flex-col items-center justify-center max-w-screen-md m-auto pt-10 text-left;
  }
  p {
    @apply m-auto w-fit text-ink-secondary;
  }
</style>
