---
const { music_text = "music" } = Astro.props;
---

<div class="music-container group" id="music-container">
  <div class="music-info">
    <span class="current-track">Listening to {music_text}</span>
  </div>
  <div class="music-details">
    <div class="flex flex-row gap-3">
      <img src="" alt="Album Art" class="album-art" />
      <div class="text-info">
        <span class="song-name"></span>
        <span class="artist-name"></span>
        <a href="#" class="spotify-badge" target="_blank" rel="noopener noreferrer">
          Play on Spotify
        </a>
      </div>
    </div>
  </div>
</div>

<script>
  const updateMusicText = async () => {
    try {
      const response = await fetch("/api/spotify.json");
      const data = await response.json();
      
      if (!data.song || !data.artist) return;

      const elements = {
        currentTrack: document.querySelector(".current-track"),
        albumArt: document.querySelector(".album-art"),
        songName: document.querySelector(".song-name"),
        artistName: document.querySelector(".artist-name"),
        spotifyBadge: document.querySelector(".spotify-badge")
      };

      if (elements.currentTrack) {
        elements.currentTrack.textContent = `Listening to ${data.artist}`;
      }

      if (elements.albumArt instanceof HTMLImageElement) {
        elements.albumArt.src = data.albumArt;
      }

      if (elements.songName) {
        elements.songName.textContent = data.song;
      }

      if (elements.artistName) {
        elements.artistName.textContent = `by ${data.artist}`;
      }

      if (elements.spotifyBadge instanceof HTMLAnchorElement) {
        elements.spotifyBadge.href = `https://open.spotify.com/search/${encodeURIComponent(
          `${data.song} ${data.artist}`
        )}`;
      }
    } catch (error) {
      console.error("Failed to fetch music data:", error);
    }
  };

  updateMusicText();
  setInterval(updateMusicText, 60000);
</script>

<style>
  .music-container {
    @apply relative flex items-center justify-center text-copy-secondary animate-fade-in-right;
  }

  .music-info {
    @apply cursor-pointer;
    
    .current-track {
      @apply group-hover:underline underline-offset-4;
    }
  }

  .music-details {
    @apply absolute left-1/2 -translate-x-1/2 top-8 opacity-0 translate-y-2
           min-w-[300px] p-4 bg-white rounded-lg border border-black/5 shadow-md
           transition-all duration-200 group-hover:opacity-100 group-hover:translate-y-0;

    .album-art {
      @apply w-20 h-20 rounded;
    }

    .text-info {
      @apply flex flex-col justify-center;

      .song-name {
        @apply text-copy-primary text-sm font-medium;
      }

      .artist-name {
        @apply text-xs text-copy-secondary;
      }

      .spotify-badge {
        @apply mt-2 px-3 py-1 text-xs text-white bg-[#1DB954] rounded-full
               hover:bg-black transition-colors duration-200;
      }
    }
  }
</style>
